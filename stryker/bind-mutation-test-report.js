document.querySelector('mutation-test-report-app').report = {"files":{"/home/travis/build/Sly321/express-parameter-rewriter/src/express-parameter-rewriter.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":2,"line":14},"start":{"column":89,"line":7}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"},{"id":"1","location":{"end":{"column":40,"line":10},"start":{"column":9,"line":10}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"2","location":{"end":{"column":40,"line":10},"start":{"column":9,"line":10}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"4","location":{"end":{"column":38,"line":10},"start":{"column":36,"line":10}},"mutatorName":"BinaryExpression","replacement":">","status":"Killed"},{"id":"5","location":{"end":{"column":26,"line":10},"start":{"column":25,"line":10}},"mutatorName":"BinaryExpression","replacement":"-","status":"RuntimeError"},{"id":"3","location":{"end":{"column":38,"line":10},"start":{"column":36,"line":10}},"mutatorName":"BinaryExpression","replacement":"<","status":"Killed"},{"id":"7","location":{"end":{"column":6,"line":12},"start":{"column":42,"line":10}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"6","location":{"end":{"column":24,"line":10},"start":{"column":21,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"8","location":{"end":{"column":33,"line":11},"start":{"column":32,"line":11}},"mutatorName":"BinaryExpression","replacement":"-","status":"RuntimeError"},{"id":"10","location":{"end":{"column":48,"line":11},"start":{"column":47,"line":11}},"mutatorName":"BinaryExpression","replacement":"-","status":"RuntimeError"},{"id":"11","location":{"end":{"column":46,"line":11},"start":{"column":43,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"9","location":{"end":{"column":31,"line":11},"start":{"column":28,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"12","location":{"end":{"column":29,"line":13},"start":{"column":28,"line":13}},"mutatorName":"BinaryExpression","replacement":"-","status":"RuntimeError"},{"id":"14","location":{"end":{"column":44,"line":13},"start":{"column":43,"line":13}},"mutatorName":"BinaryExpression","replacement":"-","status":"RuntimeError"},{"id":"13","location":{"end":{"column":27,"line":13},"start":{"column":24,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"16","location":{"end":{"column":2,"line":29},"start":{"column":88,"line":16}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"},{"id":"15","location":{"end":{"column":42,"line":13},"start":{"column":39,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"18","location":{"end":{"column":10,"line":26},"start":{"column":29,"line":19}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"19","location":{"end":{"column":83,"line":20},"start":{"column":17,"line":20}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"20","location":{"end":{"column":83,"line":20},"start":{"column":17,"line":20}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"21","location":{"end":{"column":51,"line":20},"start":{"column":49,"line":20}},"mutatorName":"BinaryExpression","replacement":"&&","status":"Killed"},{"id":"22","location":{"end":{"column":46,"line":20},"start":{"column":44,"line":20}},"mutatorName":"BinaryExpression","replacement":"<","status":"Killed"},{"id":"23","location":{"end":{"column":46,"line":20},"start":{"column":44,"line":20}},"mutatorName":"BinaryExpression","replacement":">","status":"Killed"},{"id":"24","location":{"end":{"column":48,"line":20},"start":{"column":17,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"25","location":{"end":{"column":48,"line":20},"start":{"column":17,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"26","location":{"end":{"column":38,"line":20},"start":{"column":37,"line":20}},"mutatorName":"BinaryExpression","replacement":"-","status":"RuntimeError"},{"id":"27","location":{"end":{"column":36,"line":20},"start":{"column":33,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"28","location":{"end":{"column":81,"line":20},"start":{"column":79,"line":20}},"mutatorName":"BinaryExpression","replacement":"<","status":"Killed"},{"id":"29","location":{"end":{"column":81,"line":20},"start":{"column":79,"line":20}},"mutatorName":"BinaryExpression","replacement":">","status":"Killed"},{"id":"30","location":{"end":{"column":83,"line":20},"start":{"column":52,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"31","location":{"end":{"column":83,"line":20},"start":{"column":52,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"32","location":{"end":{"column":73,"line":20},"start":{"column":72,"line":20}},"mutatorName":"BinaryExpression","replacement":"-","status":"RuntimeError"},{"id":"33","location":{"end":{"column":71,"line":20},"start":{"column":68,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"34","location":{"end":{"column":14,"line":25},"start":{"column":85,"line":20}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"35","location":{"end":{"column":74,"line":21},"start":{"column":17,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"17","location":{"end":{"column":6,"line":28},"start":{"column":65,"line":18}},"mutatorName":"Block","replacement":"{}","status":"Timeout"},{"id":"36","location":{"end":{"column":74,"line":21},"start":{"column":17,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"38","location":{"end":{"column":90,"line":22},"start":{"column":17,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"39","location":{"end":{"column":53,"line":23},"start":{"column":17,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"37","location":{"end":{"column":90,"line":22},"start":{"column":17,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"40","location":{"end":{"column":53,"line":23},"start":{"column":17,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"}],"source":"import { NextFunction, Response, Request, RequestHandler } from 'express'\n\ntype ParameterRewriteObject = {\n    [key: string]: string\n}\n\nfunction replaceUrlParameterName(url: string, oldName: string, newName: string): string {\n    // regex mit ? oder & davor abfragen\n    // dafÃ¼r dynamischen regex erstellen? oder beim initialisieren der Middleware besser\n    if (url.indexOf('?' + oldName) >= 0) {\n        return url.replace('?' + oldName, '?' + newName)\n    }\n    return url.replace('&' + oldName, '&' + newName)\n}\n\nexport default function ParameterRewriter(obj: ParameterRewriteObject): RequestHandler {\n    const keys = Object.keys(obj)\n    return (req: Request, res: Response, next: NextFunction) => {\n        keys.forEach(key => {\n            if (req.url.indexOf('?' + key) >= 0 || req.url.indexOf('&' + key) >= 0) {\n                req.url = replaceUrlParameterName(req.url, key, obj[key])\n                req.originalUrl = replaceUrlParameterName(req.originalUrl, key, obj[key])\n                req.query[obj[key]] = req.query[key]\n                delete req.query[key]\n            }\n        })\n        next()\n    }\n}\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};